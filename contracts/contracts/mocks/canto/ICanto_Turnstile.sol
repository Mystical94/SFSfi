// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.17;

/// @title Unofficial Turnstile interface
/// @notice This interface is used as part of the csrCANTO related contracts
/// @dev This minimal interface can be reused for contracts registration to the CSR
interface ICanto_Turnstile {

    /// @notice Mints ownership NFT that allows the owner to collect fees earned by the smart contract.
    ///         `msg.sender` is assumed to be a smart contract that earns fees. Only smart contract itself
    ///         can register a fee receipient.
    /// @param _recipient recipient of the ownership NFT
    /// @return tokenId of the ownership NFT that collects fees
    function register(address _recipient) external returns (uint256);
    
    /// @notice Assigns smart contract to existing NFT. That NFT will collect fees generated by the smart contract.
    ///         Callable only by smart contract itself.
    /// @param _tokenId tokenId which will collect fees
    /// @return tokenId of the ownership NFT that collects fees
    function assign(uint256 _tokenId) external returns (uint256);

    /// @notice Returns tokenId that collects fees generated by the smart contract
    /// @param _smartContract address of the smart contract
    /// @return tokenId that collects fees generated by the smart contract
    function getTokenId(address _smartContract) external view returns (uint256);

    /// @notice Withdraws earned fees to `_recipient` address. Only callable by NFT owner.
    /// @param _tokenId token Id
    /// @param _recipient recipient of fees
    /// @param _amount amount of fees to withdraw
    /// @return amount of fees withdrawn
    function withdraw(
        uint256 _tokenId,
        address _recipient,
        uint256 _amount
    ) external returns (uint256);

    /// @notice maps tokenId to fees earned
    function balances(uint256 _tokenId) external view returns (uint256);
}